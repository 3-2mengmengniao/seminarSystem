<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- namespace用来指定该xml文件对应的interface  -->
<!-- 默认idea对于该xml文件是几乎没有任何提示的，需要装一个叫 mybatis free plugins 的插件 -->
<mapper namespace="com.test.seminar.mapper.CourseClassMapper">

    <!-- id 就是方法名称 -->
    <!-- resultType 指定返回的类型，如果返回多个，一样只要指定这个类型,mybatis会自动生成一个list-->
    <!-- #{xxx}是参数的名称，参数会被填到这个位置 -->
    <resultMap id="courseClassResultMap" type="com.test.seminar.entity.CourseClass">
        <id property="id" column="id"/>
        <result property="classSerial" column="klass_serial"/>
        <result property="classTime" column="klass_time"/>
        <result property="classLocation" column="klass_location"/>
        <association property="course" column="id" javaType="com.test.seminar.entity.Course" select="com.test.seminar.mapper.CourseMapper.getCourseByCourseClassId"/>
    </resultMap>

    <select id="getCourseClassByCourseClassId" resultMap="courseClassResultMap">
        SELECT id,grade,klass_serial,klass _time,klass_location
        FROM klass
        WHERE id=#{courseClassId}
    </select>

    <select id="getCourseClassByCourseId" resultMap="courseClassResultMap">
        SELECT id,grade,klass_serial,klass_time,klass_location
        FROM klass
        WHERE course_id=#{courseId}
    </select>

    <select id="getCourseClassByStudentIdAndCourseId" resultMap="courseClassResultMap">
        SELECT id,grade,klass_serial,klass_time,klass_location
        FROM klass,klass_student
        WHERE course_id=#{courseId} and klass_student.student_id=#{studentId} and klass.id=klass_student.klass_id
    </select>

    <select id="getCourseClassByTeamId" resultMap="courseClassResultMap">
        select id,grade,klass_serial,klass_time,klass_location
        from klass,team
        where id=#{teamId} and team.klass_id=klass.id
    </select>

    <select id="getCourseClassBySeminarControlId" resultMap="courseClassResultMap">
        select id,grade,klass_serial,klass_time,klass_location
        from klass,klass_seminar
        where klass_seminar.id=#{seminarControlId} and klass_seminar.klass_id=klass.id
    </select>

    <insert id="insertCourseClass">
        insert into klass(course_id,grade,klass_serial,klass_time,klass_location)
        values(#{courseId},#{courseClass.grade},#{courseClass.classSerial},#{courseClass.classTime},#{courseClass.classLocation})
    </insert>

    <insert id="insertCourseClassStudentRelation">
        insert into klass_student(klass_id,student_id,course_id)
        values(#{courseClassId},#{studentId},#{courseId})
    </insert>

    <update id="updateCourseClassByCourseClass">
        update klass
        <set>
            <if test="courseClass.grade!=null">
                grade=#{courseClass.grade},
            </if>
            <if test="courseClass.classSerial!=null">
                klass_serial=#{courseClass.classSerial},
            </if>
            <if test="courseClass.classTime!=null" >
                klass_time=#{courseClass.classTime},
            </if>
            <if test="courseClass.classLocation!=null" >
                klass_location=#{courseClass.classLocation},
            </if>
        </set>
        where id=#{courseClass.id}
    </update>

    <delete id="deleteCourseClassByCourseClassId">
        delete from klass where id=#{courseClassId}
    </delete>
</mapper>