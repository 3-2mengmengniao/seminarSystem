<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- namespace用来指定该xml文件对应的interface  -->
<!-- 默认idea对于该xml文件是几乎没有任何提示的，需要装一个叫 mybatis free plugins 的插件 -->
<mapper namespace="com.test.seminar.mapper.PresentationMapper">

    <!-- id 就是方法名称 -->
    <!-- resultType 指定返回的类型，如果返回多个，一样只要指定这个类型,mybatis会自动生成一个list-->
    <!-- #{xxx}是参数的名称，参数会被填到这个位置 -->
    <resultMap id="presentationResultMap" type="com.test.seminar.entity.Presentation">
        <id property="id" column="id"/>
        <result property="present" column="is_present"/>
        <result property="reportName" column="report_name"/>
        <result property="reportUrl" column="report_url"/>
        <result property="pptName" column="ppt_name"/>
        <result property="pptUrl" column="ppt_url"/>
        <result property="seminarControlId" column="klass_seminar_id"/>
        <association property="team" column="team_id" javaType="com.test.seminar.entity.Team" select="com.test.seminar.mapper.TeamMapper.getTeamByTeamId"/>
        <collection property="questionList" column="id" javaType="ArrayList" ofType="com.test.seminar.entity.Question" select="com.test.seminar.mapper.QuestionMapper.getQuestionByPresentationId"/>
    </resultMap>

    <select id="getPresentationBySeminarControlId" resultMap="presentationResultMap">
        select id,team_id,klass_seminar_id,team_order,is_present,report_name,report_url,ppt_name,ppt_url
        from  attendance
        where klass_seminar_id=#{seminarControlId}
    </select>

    <select id="getPresentationByPresentationId" resultMap="presentationResultMap">
        select id,team_id,klass_seminar_id,team_order,is_present,report_name,report_url,ppt_name,ppt_url
        from  attendance
        where id=#{presentationId}
    </select>

    <select id="getPresentationBySeminarControlIdAndTeamOrder" resultMap="presentationResultMap">
        select id,team_id,klass_seminar_id,team_order,is_present,report_name,report_url,ppt_name,ppt_url
        from  attendance
        where team_order=#{teamOrder} and klass_seminar_id=#{seminarControlId}
    </select>

    <select id="getPresentationBySeminarControlIdAndTeamId" resultMap="presentationResultMap">
        select id,team_id,klass_seminar_id,team_order,is_present,report_name,report_url,ppt_name,ppt_url
        from  attendance
        where team_id=#{teamId} and klass_seminar_id=#{seminarControlId}
    </select>

    <insert id="insertPresentation">
        insert into attendance(klass_seminar_id,team_id,team_order,is_present,report_name,report_url,ppt_name,ppt_url)
        values(#{seminarControlId},#{teamId},#{presentation.teamOrder},#{presentation.present},#{presentation.reportName},#{presentation.reportUrl},#{presentation.pptName},#{presentation.pptUrl})
    </insert>

    <update id="updatePresentation">
        update attendance
        <set>
            <if test="presentation.teamOrder!=null">
                team_order=#{presentation.teamOrder},
            </if>
            <if test="presentation.present!=null">
                is_present=#{presentation.present},
            </if>
            <if test="presentation.reportName!=null">
                report_name=#{presentation.reportName},
            </if>
            <if test="presentation.reportUrl!=null">
                report_url=#{presentation.reportUrl},
            </if>
            <if test="presentation.pptName!=null">
                ppt_name=#{presentation.pptName},
            </if>
            <if test="presentation.pptUrl!=null">
                ppt_url=#{presentation.pptUrl},
            </if>
        </set>
        where id=#{presentation.id}
    </update>

    <delete id="deletePresentationByPresentationId">
        delete from attendance where id=#{presentationId}
    </delete>

    <delete id="deletePresentationBySeminarControlIdAndTeamId">
        delete from attendance where team_id=#{teamId} and klass_seminar_id=#{seminarControlId}
    </delete>
</mapper>