<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.seminar.mapper.StudentMapper">

    <resultMap id="studentResultMap" type="com.test.seminar.entity.Student">
        <id property="id" column="id" />
        <result property="active" column="is_active"/>
        <collection property="courseList" javaType="ArrayList" column="id" ofType="com.test.seminar.entity.Course" select="com.test.seminar.mapper.CourseMapper.getCourseByStudentId"/>
    </resultMap>


    <select id="getStudentByStudentId" resultMap="studentResultMap">
        SELECT id,account,password,is_active,student_name,email
        FROM student
        WHERE id=#{studentId}
    </select>

    <select id="getStudentByAccount" resultMap="studentResultMap">
        SELECT id,account,password,is_active,student_name,email
        FROM student
        WHERE account=#{account}
    </select>

    <select id="getStudentByTeamId" resultMap="studentResultMap">
        SELECT id,account,password,is_active,student_name,email
        FROM student,team_student
        WHERE team_student.team_id=#{teamId} and team_student.student_id=student.id
    </select>

    <select id="getStudentByCourseClassId" resultMap="studentResultMap">
        SELECT id,account,password,is_active,student_name,email
        FROM student,klass_student
        WHERE klass_student.klass_id=#{courseClassId} and klass_student.student_id=student.id
    </select>

    <insert id="insertStudent">
        insert into student(account,password,is_active,student_name,email)
        values(#{student.account},#{student.password},#{student.active},#{student.studentName},#{student.email})
    </insert>

    <update id="updateStudentByStudent">
        update student
        <set>
            <if test="student.account!=null">
                account=#{student.account},
            </if>
            <if test="student.password!=null">
                password=#{student.password},
            </if>
            <if test="student.active!=null">
                is_active=#{student.active},
            </if>
            <if test="student.studentName!=null">
                student_name=#{student.studentName},
            </if>
            <if test="student.email!=null">
                email=#{student.email},
            </if>
        </set>
        where id=#{student.id}
    </update>

    <delete id="deleteStudentByStudentId">
        delete from student where id=#{studentId}
    </delete>

    <select id="getAllStudent" resultMap="studentResultMap">
        SELECT id,account,password,is_active,student_name,email
        FROM student
    </select>

    <select id="getStudentNotInTeamByCourseId" resultMap="studentResultMap">
        select id,account,password,is_active,student_name,email
        from student,
             klass_student
        where klass_student.course_id = #{courseId}
          and id = klass_student.student_id
          and id not in
              (select team_student.student_id
               from team_student,
                    klass_student,
                    klass_team
               where klass_student.course_id = #{courseId}
                 and klass_team.klass_id = klass_student.klass_id
                 and team_student.team_id = klass_team.team_id)
    </select>

    <select id="getStudentNotInTeamByCourseIdForSubCourse" resultMap="studentResultMap">
        select id,account,password,is_active,student_name,email
        from student,
             klass_student
        where klass_student.course_id = #{courseId}
          and id = klass_student.student_id
          and id not in
              (select team_student.student_id
               from team_student,
                    klass_student,
                    klass_team
               where klass_student.course_id = #{mainCourseId}
                 and klass_team.klass_id = klass_student.klass_id
                 and team_student.team_id = klass_team.team_id)
    </select>
</mapper>